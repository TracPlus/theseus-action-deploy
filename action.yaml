name: 'Deploy'
description: 'Creates docker containers and applies Kubernetes changes.'
inputs:
  version:
    description: 'The version generated in the prepare step'
    required: true 
  project-path:  # id of input
    description: 'Path to the deployable project root.'
    required: true
  container-id:
    description: 'The ID for the container in the repository.'
    required: true
  gcp-staging-id:
    description: 'Project ID for Staging environment.'
    required: true 
  gcp-staging-key:
    description: 'Key for Staging environment.'
    required: true
  gcp-staging-email:
    description: 'Account email for Staging environment.'
    required: true
  gcp-production-id:
    description: 'Project ID for Production environment.'
    required: true 
  gcp-production-key:
    description: 'Key for Production environment.'
    required: true
  gcp-production-email:
    description: 'Account email for Production environment.'
    required: true   
runs:
  using: "composite"
  if: endsWith(github.ref, '/development') || endsWith(github.ref, '/main')
  steps:
    - uses: actions/download-artifact@master
      with:
        name: publish
        path: .
    - name: Set env to staging
      if: endsWith(github.ref, '/development')
      run: |
        echo "GCP_PROJECT=${{ secrets.GCP_PROJECT_STAGING }}" >> $GITHUB_ENV
      shell: bash
    - name: Set env to production
      if: endsWith(github.ref, '/main')
      run: |
        echo "GCP_PROJECT=${{ secrets.GCP_PROJECT }}" >> $GITHUB_ENV
      shell: bash
    - name: Setup Google Cloud Tools Staging
      if: endsWith(github.ref, '/development')
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.gcp-staging-id }}
        service_account_email: ${{ inputs.gcp-staging-email }}
        service_account_key: ${{ inputs.gcp-staging-key }}
        export_default_credentials: true
    - name: Setup Google Cloud Tools Production
      if: endsWith(github.ref, '/main')
      uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.gcp-production-id }}
        service_account_email: ${{ inputs.gcp-production-email }}
        service_account_key: ${{ inputs.gcp-production-key }}
        export_default_credentials: true
    - name: Setup Docker
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev
      shell: bash
    - name: Gateway Docker Build, Tag and Push
      run: |
        docker build --build-arg CONFIGURATION=Staging -t us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/tracstar/tracstar:${{ inputs.version }} ./${{ inputs.project-path }}
        docker push us-central1-docker.pkg.dev/${{ env.GCP_PROJECT }}/tracstar/tracstar:${{ inputs.version }}
      shell: bash
    - name: Replace variables in Kubernetes config
      uses: TracPlus/replace-action@master
      with:
        files: ${{ inputs.project-path }}/Kubernetes/deployment.yaml
        replacements: '@VERSION=${{ inputs.version }}'
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials main --zone us-central1-a --project ${{ env.GCP_PROJECT }}
      shell: bash
    # Apply kubernetes changes.
    - name: Deploy Gateway
      run: |-
        kubectl apply -f ${{ inputs.project-path }}/Kubernetes/deployment.yaml
      shell: bash